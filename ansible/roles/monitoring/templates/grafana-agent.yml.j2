# ============================================================================
# TEMPLATE COMPLETAMENTE CORREGIDO: grafana-agent.yml.j2
# Con soporte para Django metrics integrado
# ============================================================================

# Grafana Agent Configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}
# Environment: {{ app_environment | default('dev') }}
# Instance: {{ inventory_hostname | default(ansible_hostname) }}

server:
  log_level: {{ grafana_agent_log_level | default('info') }}

metrics:
  global:
    scrape_interval: {{ scrape_interval | default('15s') }}
    evaluation_interval: {{ evaluation_interval | default('15s') }}
    external_labels:
      environment: "{{ app_environment | default('dev') }}"
      instance: "{{ inventory_hostname | default(ansible_hostname) }}"
      project: "{{ gcp_project_id | default('zentravision') }}"
      deployment: "zentravision"
      region: "{{ ansible_region | default('us-central1') }}"
      
  configs:
  - name: "{{ gcp_project_id | default('zentravision') }}-{{ app_environment | default('dev') }}-metrics"
    
    remote_write:
    - url: "{{ vault_grafana_prometheus_url }}"
      basic_auth:
        username: "{{ vault_grafana_username }}"
        password: "{{ vault_grafana_password }}"
      queue_config:
        max_samples_per_send: {{ max_samples_per_send | default(1000) }}
        batch_send_deadline: "{{ batch_send_deadline | default('5s') }}"
        max_shards: {{ max_shards | default(10) }}
        min_shards: {{ min_shards | default(1) }}
        capacity: {{ capacity | default(10000) }}
      
    scrape_configs:
    - job_name: 'node-exporter'
      static_configs:
      - targets: 
        - 'localhost:{{ node_exporter_port | default(9100) }}'
        labels:
          service: 'system'
          app: 'zentravision'
          exporter: 'node'
          component: 'infrastructure'
          
{% if enable_postgres_exporter | default(true) %}
    - job_name: 'postgresql-exporter'
      static_configs:
      - targets:
        - 'localhost:{{ postgres_exporter_port | default(9187) }}'
        labels:
          service: 'postgresql'
          app: 'zentravision'
          exporter: 'postgres'
          component: 'database'
{% endif %}
              
{% if enable_redis_exporter | default(true) %}
    - job_name: 'redis-exporter'
      static_configs:
      - targets:
        - 'localhost:{{ redis_exporter_port | default(9121) }}'
        labels:
          service: 'redis'
          app: 'zentravision'
          exporter: 'redis'
          component: 'cache'
{% endif %}

{% if enable_nginx_exporter | default(true) %}
    - job_name: 'nginx-exporter'
      static_configs:
      - targets:
        - 'localhost:{{ nginx_exporter_port | default(9113) }}'
        labels:
          service: 'nginx'
          app: 'zentravision'
          exporter: 'nginx'
          component: 'webserver'
{% endif %}

{% if enable_django_metrics | default(true) %}
    # ZentraVision Django Application Metrics
    - job_name: 'zentravision-django'
      static_configs:
      - targets:
        - 'localhost:{{ django_metrics_port | default(8000) }}'
        labels:
          service: 'zentravision-django'
          app: 'zentravision'
          exporter: 'django-custom'
          component: 'application'
      metrics_path: '{{ django_metrics_path | default("/metrics/") }}'
      scrape_interval: {{ django_scrape_interval | default("15s") }}
      scrape_timeout: {{ django_scrape_timeout | default("10s") }}
      scheme: http
      # Filtros específicos para métricas zentravision
      metric_relabel_configs:
        - source_labels: [__name__]
          regex: 'zentravision_.*'
          action: keep
        - target_label: app
          replacement: zentravision
{% endif %}
      
    - job_name: 'grafana-agent'
      static_configs:
      - targets:
        - 'localhost:{{ grafana_agent_port | default(12345) }}'
        labels:
          service: 'grafana-agent'
          app: 'zentravision'
          exporter: 'grafana-agent'
          component: 'monitoring'