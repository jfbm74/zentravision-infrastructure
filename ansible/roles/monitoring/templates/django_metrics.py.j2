import time
import psutil
from django.http import HttpResponse
from django.db import connection

def metrics_view(request):
    """Endpoint de m√©tricas para Prometheus"""
    try:
        # System metrics
        cpu_percent = psutil.cpu_percent(interval=1)
        memory = psutil.virtual_memory()
        disk = psutil.disk_usage('/')
        
        # Database metrics
        try:
            with connection.cursor() as cursor:
                cursor.execute("SELECT count(*) FROM pg_stat_activity WHERE state = 'active';")
                active_connections = cursor.fetchone()[0]
        except:
            active_connections = 0
        
        metrics = f"""# HELP zentravision_cpu_usage CPU usage percentage
# TYPE zentravision_cpu_usage gauge
zentravision_cpu_usage {cpu_percent}

# HELP zentravision_memory_usage_percent Memory usage percentage
# TYPE zentravision_memory_usage_percent gauge
zentravision_memory_usage_percent {memory.percent}

# HELP zentravision_disk_usage_percent Disk usage percentage
# TYPE zentravision_disk_usage_percent gauge
zentravision_disk_usage_percent {(disk.used / disk.total) * 100}

# HELP zentravision_db_connections_active Active database connections
# TYPE zentravision_db_connections_active gauge
zentravision_db_connections_active {active_connections}

# HELP zentravision_up Application is up
# TYPE zentravision_up gauge
zentravision_up 1
"""
        
        return HttpResponse(metrics, content_type='text/plain')
        
    except Exception as e:
        error_metrics = """# HELP zentravision_up Application is up
# TYPE zentravision_up gauge
zentravision_up 0
"""
        return HttpResponse(error_metrics, content_type='text/plain', status=500)
