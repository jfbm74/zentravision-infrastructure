---
- name: Create postgres_exporter user
  user:
    name: postgres_exporter
    system: yes
    shell: /bin/false
    home: /var/lib/postgres_exporter
    createhome: no

- name: Create postgres_exporter directories
  file:
    path: "{{ item }}"
    state: directory
    owner: postgres_exporter
    group: postgres_exporter
    mode: '0755'
  loop:
    - /var/lib/postgres_exporter
    - /etc/postgres_exporter

- name: Download postgres_exporter
  get_url:
    url: "{{ postgres_exporter_url }}"
    dest: /tmp/postgres_exporter.tar.gz
    mode: '0644'

- name: Extract postgres_exporter
  unarchive:
    src: /tmp/postgres_exporter.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Install postgres_exporter binary
  copy:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64/postgres_exporter"
    dest: /usr/local/bin/postgres_exporter
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: Create postgres_exporter database user
  postgresql_user:
    name: postgres_exporter
    password: "{{ postgres_exporter_password }}"
    role_attr_flags: LOGIN
    state: present
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true

- name: Grant monitoring permissions to postgres_exporter
  postgresql_privs:
    database: postgres
    roles: postgres_exporter
    privs: CONNECT
    type: database
    state: present
  become_user: postgres

- name: Create postgres_exporter service file
  template:
    src: postgres_exporter.service.j2
    dest: /etc/systemd/system/postgres_exporter.service
    owner: root
    group: root
    mode: '0644'
  notify: restart postgres_exporter

- name: Create postgres_exporter environment file
  template:
    src: postgres_exporter.env.j2
    dest: /etc/default/postgres_exporter
    owner: postgres_exporter
    group: postgres_exporter
    mode: '0600'
  notify: restart postgres_exporter

- name: Enable and start postgres_exporter
  systemd:
    name: postgres_exporter
    enabled: yes
    state: started
    daemon_reload: yes